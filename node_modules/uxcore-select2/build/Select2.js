'use strict';

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var RcSelect = require('rc-select');
var assign = require('object-assign');

var Select2 = function (_RcSelect) {
    _inherits(Select2, _RcSelect);

    function Select2(props) {
        _classCallCheck(this, Select2);

        return _possibleConstructorReturn(this, _RcSelect.call(this, props));
    }

    return Select2;
}(RcSelect);

Select2.displayName = 'Select2';
Select2.defaultProps = assign({}, RcSelect.defaultProps, {
    prefixCls: "kuma-select2",
    optionLabelProp: "children",
    transitionName: 'slideUp'
});

module.exports = Select2;
'use strict';

exports.__esModule = true;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _panel = require('./panel');

var _panel2 = _interopRequireDefault(_panel);

var _editor = require('./editor');

var _editor2 = _interopRequireDefault(_editor);

var _keycode = require('./keycode');

var _util = require('./util');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @author: vincent.bian
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */


var __matchTimer = void 0;

var Mention = function (_React$Component) {
    _inherits(Mention, _React$Component);

    function Mention(props) {
        _classCallCheck(this, Mention);

        var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));

        _this.state = {
            target: null,
            mentionList: [],
            cursorPosition: {
                x: 0,
                y: 0
            },
            panelVisible: false,
            panelIdx: 0
        };
        return _this;
    }

    Mention.prototype.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {
        if (prevState.mentionList.length !== this.state.mentionList.length) {
            this.setState({
                panelVisible: this.state.mentionList.length > 0
            });
        }
        if (!prevState.panelVisible && this.state.panelVisible) {
            this.setState({
                panelIdx: 0
            });
        }
    };

    Mention.prototype.selectItem = function selectItem(data) {
        this.setState({
            target: {
                data: data,
                t: new Date().getTime()
            },
            mentionList: []
        });
    };

    Mention.prototype.runMatcher = function runMatcher(str) {
        var _this2 = this;

        __matchTimer && clearTimeout(__matchTimer);
        __matchTimer = setTimeout(function () {
            _this2._matcher(str);
        }.bind(this), this.props.delay);
    };

    Mention.prototype._matcher = function _matcher(str) {
        // console.log(`matcher run with: ${str}`);
        var _props = this.props;
        var source = _props.source;
        var matchRange = _props.matchRange;

        this.setState({
            panelVisible: false,
            mentionList: []
        });
        if (str.length >= matchRange[0] && str.length <= matchRange[1]) {
            if (Array.isArray(source)) {
                this._next(source.filter(function (item) {
                    return item.indexOf(str) !== -1;
                }));
            } else {
                source(str, this._next.bind(this));
            }
        }
    };

    Mention.prototype.setPanelPos = function setPanelPos(pos) {
        var offset = (0, _util.getScrollOffset)();
        pos = {
            x: pos.x + offset.x,
            y: pos.y + offset.y
        };
        this.setState({
            cursorPosition: pos
        });
    };

    Mention.prototype._next = function _next(matchResult) {
        if (this.props.formatter) {
            matchResult = this.props.formatter(matchResult);
        }
        this.setState({
            mentionList: matchResult
        });
    };

    Mention.prototype.onKeyup = function onKeyup(e) {
        if (this.state.panelVisible) {
            var count = this.state.mentionList.length;
            switch (e.keyCode) {
                case _keycode.KEYCODE.UP:
                    this.setState({
                        panelIdx: this.state.panelIdx === 0 ? count - 1 : this.state.panelIdx - 1
                    });
                    break;
                case _keycode.KEYCODE.DOWN:
                    this.setState({
                        panelIdx: this.state.panelIdx === count - 1 ? 0 : this.state.panelIdx + 1
                    });
                    break;
                case _keycode.KEYCODE.ENTER:
                    this.selectItem(this.state.mentionList[this.state.panelIdx]);
                    break;
                default:
                    this.setState({
                        mentionList: []
                    });
                    break;
            }
        }
    };

    Mention.prototype.render = function render() {
        var props = this.props;
        var panelPosition = {
            left: this.state.cursorPosition.x,
            top: this.state.cursorPosition.y
        };
        var width = props.width;
        var height = props.height;
        var prefixCls = props.prefixCls;

        return _react2["default"].createElement(
            'div',
            { onKeyUp: this.onKeyup.bind(this) },
            _react2["default"].createElement(
                _editor2["default"],
                {
                    width: width,
                    height: height,
                    prefixCls: prefixCls,
                    panelVisible: this.state.panelVisible,
                    matcher: this.runMatcher.bind(this),
                    mentionTarget: this.state.target,
                    setCursorPos: this.setPanelPos.bind(this),
                    formatter: props.mentionFormatter,
                    onChange: props.onChange
                },
                props.children
            ),
            _react2["default"].createElement(_panel2["default"], {
                prefixCls: prefixCls,
                visible: this.state.panelVisible,
                idx: this.state.panelIdx,
                list: this.state.mentionList,
                onSelect: this.selectItem.bind(this),
                formatter: props.panelFormatter,
                style: panelPosition })
        );
    };

    return Mention;
}(_react2["default"].Component);

exports["default"] = Mention;

Mention.displayName = 'uxcore-mention';
Mention.propType = {
    prefixCls: _react2["default"].PropTypes.string,
    width: _react2["default"].PropTypes.number,
    height: _react2["default"].PropTypes.number,
    source: _react2["default"].PropTypes.oneOfType([_react2["default"].PropTypes.array, _react2["default"].PropTypes.func]),
    delay: _react2["default"].PropTypes.number,
    matchRange: _react2["default"].PropTypes.arrayOf(_react2["default"].PropTypes.number),
    formatter: _react2["default"].PropTypes.func,
    panelFormatter: _react2["default"].PropTypes.func,
    mentionFormatter: _react2["default"].PropTypes.func,
    onChange: _react2["default"].PropTypes.func
};
Mention.defaultProps = {
    prefixCls: 'kuma-mention',
    width: 200,
    height: 100,
    source: [],
    delay: 100,
    matchRange: [2, 8],
    formatter: function formatter(data) {
        return data;
    },
    panelFormatter: function panelFormatter(data) {
        return '' + data.text;
    },
    mentionFormatter: function mentionFormatter(data) {
        return '@' + data.text;
    },
    onChange: function onChange(e, value) {}
};
module.exports = exports['default'];
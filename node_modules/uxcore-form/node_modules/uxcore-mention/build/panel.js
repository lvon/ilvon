'use strict';

exports.__esModule = true;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Panel = function (_React$Component) {
	_inherits(Panel, _React$Component);

	function Panel(props) {
		_classCallCheck(this, Panel);

		return _possibleConstructorReturn(this, _React$Component.call(this, props));
	}

	Panel.prototype.render = function render() {
		var _this2 = this;

		var props = this.props;
		var onSelect = props.onSelect;
		var list = props.list;
		var style = props.style;
		var visible = props.visible;
		var idx = props.idx;
		var formatter = props.formatter;
		var prefixCls = props.prefixCls;

		var clsObj = {};
		clsObj[prefixCls + '-panel'] = true;
		clsObj[prefixCls + '-panel-visible'] = visible;
		var cls = (0, _classnames2["default"])(clsObj);
		return _react2["default"].createElement(
			'ul',
			{ className: cls, style: style },
			list.map(function (item, index) {
				var itemClsObj = {};
				itemClsObj[prefixCls + '-panel-item'] = true;
				itemClsObj[prefixCls + '-panel-item-current'] = idx === index;
				var itemCls = (0, _classnames2["default"])(itemClsObj);
				return _react2["default"].createElement(
					'li',
					{ className: itemCls, key: index, onClick: onSelect.bind(_this2, item) },
					_react2["default"].createElement('div', { dangerouslySetInnerHTML: { __html: formatter(item) } })
				);
			})
		);
	};

	return Panel;
}(_react2["default"].Component);

exports["default"] = Panel;

Panel.displayName = 'uxcore-mention-panel';
Panel.propType = {
	prefixCls: _react2["default"].PropTypes.string,
	list: _react2["default"].PropTypes.array,
	style: _react2["default"].PropTypes.object,
	idx: _react2["default"].PropTypes.number,
	onSelect: _react2["default"].PropTypes.func,
	formatter: _react2["default"].PropTypes.func
};
Panel.defaultProps = {
	prefixCls: '',
	list: [],
	style: {},
	idx: 0,
	onSelect: null,
	formatter: ''
};
module.exports = exports['default'];
'use strict';

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var React = require('react');
var ReactDOM = require('react-dom');

var RadiogroupItem = function (_React$Component) {
    _inherits(RadiogroupItem, _React$Component);

    function RadiogroupItem(props) {
        _classCallCheck(this, RadiogroupItem);

        return _possibleConstructorReturn(this, _React$Component.call(this, props));
    }

    RadiogroupItem.prototype._handleChange = function _handleChange(e) {
        var me = this;
        me.props.onChange(me.props.value);
    };

    RadiogroupItem.prototype.render = function render() {
        var me = this;
        return React.createElement(
            'label',
            null,
            React.createElement('input', { type: 'radio', disabled: me.props.disabled, ref: 'radio', className: me.props.className, checked: me.props.checked, onChange: me._handleChange.bind(me) }),
            React.createElement('s', null),
            React.createElement(
                'span',
                null,
                me.props.text
            )
        );
    };

    return RadiogroupItem;
}(React.Component);

RadiogroupItem.displayName = "RadiogroupItem";
RadiogroupItem.propTypes = {
    text: React.PropTypes.string,
    value: React.PropTypes.string,
    className: React.PropTypes.string,
    disabled: React.PropTypes.bool,
    onChange: React.PropTypes.func
};
RadiogroupItem.defaultProps = {
    text: "",
    value: "",
    className: "kuma-checkbox",
    disabled: false,
    onChange: function onChange() {}
};

module.exports = RadiogroupItem;
'use strict';

exports.__esModule = true;

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * @author: zhouquan.yezq
 * @time : 8/12 2015
 */

var classnames = require("classnames");

var React = require('react');
var ReactDOM = require('react-dom');

var Mask = function (_React$Component) {
    _inherits(Mask, _React$Component);

    function Mask(props) {
        _classCallCheck(this, Mask);

        return _possibleConstructorReturn(this, _React$Component.call(this, props));
    }

    Mask.prototype.render = function render() {
        var _classnames;

        var props = this.props,
            visible = props.visible,
            loadTips = props.tips ? props.tips : "Loading...";
        var _className = classnames((_classnames = {}, _classnames[props.jsxprefixCls] = true, _classnames[props.jsxprefixCls + "-hide"] = !visible, _classnames));
        return React.createElement(
            'div',
            { className: _className },
            React.createElement(
                'div',
                { className: props.jsxprefixCls + '-centerblk' },
                React.createElement(
                    'span',
                    null,
                    loadTips
                )
            )
        );
    };

    return Mask;
}(React.Component);

;

Mask.propTypes = {};

Mask.defaultProps = {
    jsxprefixCls: "kuma-uxmask"
};

exports["default"] = Mask;
module.exports = exports['default'];